const colors = {
    ground: setColor(0.9, 0.6, 0.0, 1.0),
    hill: darkGrey,
    other: setColor(1.0, 0.7, 0.0, 1.0),
};

const levels = {
    desert: {
        colors,

        hills: [
            [0, 0, 150], // 0
            [240, 100, 140],
            [-160, 180, 120],
            [260, 550, 150],
            [60, 450, 100],
            [60, 320, 50], // 5
            [-160, 650, 200],
            [-370, 580, 80],
            [-390, 500, 40],
            [-440, 460, 30],
            [-395, 420, 30], // 10
            [-490, 450, 30],
            [-455, 420, 30],
            [500, 0, 200],
            [500, 600, 200],
            [730, 450, 120], // 15
            [1300, 300, 500],
            [1300, -500, 500],
            [0, -1400, 1100],
            [-300, -300, 100],
            [-400, -200, 50], // 20
            [250, -300, 100],
            [630, -230, 100],
            [750, -500, 100],
            [-1400, 0, 1000] // 24
        ].map(a => a.map(n => n * 2.7)),

        others: [
            [-4, -36.5, 5, 10, 5, 10],
            [22, 3, 5, 5, 5, 10],
            [7, 42, 5, 5, 5, 10],
            [-15, 20, 5, 5, 5, 10],
            [-49, 52, 5, 5, 5, 10],
            [60, -24, 5, 5, 5, 10]
        ].map(a => a.map(n => n * 0.7)),

        checkpoints: [
            [13, 2],
            [1, 2],
            [0, 2],
            [2, 2],
            [2, 3],
            [0, 3],
            [0, 0],
            [1, 0],
            [13, 0],
            [22, 0],
            [22, 1],
            [13, 1],
            [15, 0],
        ]
    },

    forest: {
        colors: {
            ground: setColor(0.0, 0.5, 0.0, 1.0),
            hill: darkGrey,
            other: red,
        },

        hills: [
            // center wall
            [0, 0, 180], // 0
            [150, -330, 200],
            [-100, -600, 180],
            [-260, -280, 100],

            [-150, -900, 150],
            [-350, -850, 100], // 5

            // the curve smaller boulders
            [-450, -550, 100],
            [-450, -850, 100],
            [-450, -850, 100],

            // bottom left boulders
            [-850, -1200, 300],
            [-450, -1200, 150], // 10

            // bottom smaller
            [-200, -1070, 30],
            [-190, -1130, 40],
            [-190, -1130, 40],
            // [-200, -1190, 30],
            [-250, -1400, 130],
            [-250, -1400, 130], // 15

            // buttom smaller 2
            [-50, -1150, 30],
            [-50, -1230, 50],
            [-90, -1310, 60],
            // [30, -1010, 60],
            [30, -1010, 60],

            // left wall
            [-1300, 0, 1000], // 20

            //forest
            [0, 390, 40],
            [270, 200, 30],
            [430, -140, 30],
            [430, -570, 30],
            [130, -770, 50], // 25
            [230, -900, 30],
            [240, -650, 30],
        ].map(a => a.map(n => n * 2.7)),

        checkpoints: [
            [0, 2],
            [22, 3],
            [0, 1],
            [23, 3],
            [1, 1],
            [24, 3],
            [2, 1],
            [25, 1],
            [4, 1],
            [19, 1],
            [19, 0],
            [16, 2],
            [17, 3],
            [12, 3],
            [5, 0],
            [7, 0],
            [7, 3],
            [7, 2],
            [2, 3],
            [1, 3],
            [0, 3],
        ],
    },

    maze: (() => {
        const o = { hills: [], checkpoints: [[7 * 4 + 2, 0], [7 * 3 + 2, 0]], colors };
        let i = 0, j = 0;

        for (i = -2; i < 5; i++) {
            for (j = -2; j < 5; j++) {
                o.hills.push([i * 400, j * 400, 70]);
            }
        }

        for (i = 0; i < 4; i++) {
            o.checkpoints.push([7 * 3 + i + 2, 3]);
        }

        for (i = 4; i > 0; i--) {
            o.checkpoints.push([7 * 4 + i + 2, 1]);
        }

        return o;
    })(),

    arena: {
        colors,

        hills: [
            // middle
            [0, 0, 150], // 0
            [-300, 0, 150], // 0
            [300, 0, 150], // 0
            [-150, 0, 150], // 0
            [150, 0, 150], // 0

            // walls
            [0, 2400, 2000],
            [0, -2400, 2000],
            [2700, 0, 2000],
            [-2700, 0, 2000],

            // next to finish line
            [0, 350, 50] // 0
        ].map(a => a.map(n => n * 2.7)),

        checkpoints: [
            [0, 2],
            [1, 2],
            [1, 3],
            [1, 0],
            [0, 0],
            [2, 0],
            [2, 1],
            [2, 2]
        ]
    }
};
